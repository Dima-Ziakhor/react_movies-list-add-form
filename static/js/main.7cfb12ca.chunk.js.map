{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/InputElement/InputElement.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","InputElement","state","isTouched","handleOnBlur","setState","this","props","label","type","onChange","required","htmlFor","id","classnames","trim","value","onBlur","React","Component","NewMovie","isValid","validation","handleAddTitle","event","target","handleAddDescription","handleAddImgUrl","handleAddImdbUrl","handleAddImdbId","onAdd","preventDefault","add","onSubmit","classNames","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cfb12ca.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport classnames from 'classnames';\nimport './InputElement.scss';\n\ntype Props = {\n  label: string,\n  title: string,\n  type: string,\n  onChange(event: React.ChangeEvent<HTMLInputElement>): void,\n  required: boolean,\n};\n\ntype State = {\n  isTouched: boolean,\n};\n\nexport class InputElement extends React.Component<Props, State> {\n  state = {\n    isTouched: false,\n  };\n\n  handleOnBlur = () => {\n    this.setState({\n      isTouched: true,\n    });\n  };\n\n  render() {\n    const {\n      label, title, type, onChange, required,\n    } = this.props;\n\n    const { isTouched } = this.state;\n\n    return (\n      <div className=\"form__input-box\">\n        <label className=\"form__field\" htmlFor={`movie-${type}`}>\n          {label}\n          <input\n            type=\"text\"\n            id={`movie-${type}`}\n            className={classnames(\n              'form__input',\n              { 'form__input--touched': isTouched && !title.trim() && required },\n            )}\n            value={title}\n            onChange={onChange}\n            onBlur={this.handleOnBlur}\n            required={required}\n          />\n        </label>\n\n        <span className={classnames(\n          'form__error',\n          { 'form__error--active': isTouched && !title.trim() && required },\n        )}\n        >\n          This field is required\n        </span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { InputElement } from '../InputElement';\n\nimport './NewMovie.scss';\n\ntype Props = {\n  add(movie: Movie): void,\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  isValid: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isValid: true,\n  };\n\n  validation = () => {\n    const {\n      title, imgUrl, imdbUrl, imdbId,\n    } = this.state;\n\n    return !!title.trim() && !!imgUrl.trim() && !!imdbUrl.trim() && !!imdbId.trim();\n  };\n\n  handleAddTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      title: event.target.value,\n    });\n  };\n\n  handleAddDescription = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      description: event.target.value,\n    });\n  };\n\n  handleAddImgUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      imgUrl: event.target.value,\n    });\n  };\n\n  handleAddImdbUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      imdbUrl: event.target.value,\n    });\n  };\n\n  handleAddImdbId = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      imdbId: event.target.value,\n    });\n  };\n\n  onAdd = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!this.validation()) {\n      this.setState({\n        isValid: false,\n      });\n\n      return;\n    }\n\n    this.props.add(this.state);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      isValid: true,\n    });\n  };\n\n  render() {\n    const {\n      title, description, imgUrl, imdbUrl, imdbId, isValid,\n    } = this.state;\n\n    return (\n      <form className=\"form\" onSubmit={this.onAdd}>\n        <span className={classNames(\n          'form__error',\n          { 'form__error--active': !isValid },\n        )}\n        >\n          Required fields must be filled\n        </span>\n\n        <InputElement\n          label=\"Enter title of the film:\"\n          title={title}\n          type=\"title\"\n          onChange={this.handleAddTitle}\n          required\n        />\n\n        <InputElement\n          label=\"Enter description of the film:\"\n          title={description}\n          type=\"description\"\n          onChange={this.handleAddDescription}\n          required={false}\n        />\n\n        <InputElement\n          label=\"Enter url image of the film:\"\n          title={imgUrl}\n          type=\"imgUrl\"\n          onChange={this.handleAddImgUrl}\n          required\n        />\n\n        <InputElement\n          label=\"Enter imdbUrl\"\n          title={imdbUrl}\n          type=\"imdbUrl\"\n          onChange={this.handleAddImdbUrl}\n          required\n        />\n\n        <InputElement\n          label=\"Enter imdbId:\"\n          title={imdbId}\n          type=\"imdbId\"\n          onChange={this.handleAddImdbId}\n          required\n        />\n\n        <button\n          type=\"submit\"\n          className=\"form__button\"\n        >\n          Add film\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = ({\n    title, description, imgUrl, imdbUrl, imdbId,\n  }: Movie) => {\n    this.setState(state => {\n      const movie = {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      };\n\n      return {\n        movies: [...state.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            add={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}